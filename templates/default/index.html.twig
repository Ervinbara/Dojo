{% extends 'base.html.twig' %}
{% block nav %}{% endblock %}
{% block title %}Hello IndexControllerPhpController!{% endblock %}

{% block body %}
  <h1>Mercure and Symfony</h1>
  <div id="mercure-content-receiver"></div>
  <form id="mercure-message-form" action="{{ path('message') }}" method="post">
    <label for="mercure-message-input">Message:</label>
    <input type="text" id="mercure-message-input" name="message"/>
    <input type="submit" id="mercure-message-btn" value="Send"/>
  </form> 
{% endblock %} 
{% block javascripts %}
  <script type="text/javascript">
    const userName = prompt('Hi! I need your name for the Chat please :)');
    const _receiver = document.getElementById('mercure-content-receiver');
    const _messageInput = document.getElementById('mercure-message-input');
    const _sendForm = document.getElementById('mercure-message-form');

    const sendMessage = (message, user = 'ChatBot') => {
      if (message === '') {
        return;
      }

      fetch(_sendForm.action, {
        method: _sendForm.method,
        body: 'message=' + message + '&user=' + user,
        headers: new Headers({
          //'Authorization': 'Bearer ' + eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXJjdXJlIjp7InB1Ymxpc2giOlsiKiJdfX0.hTyxJFdmcRYBiViQzkxc7YJ-q2Wz6b8GV2kNgQT472w,
          'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
        })
      }).then(() => {
        _messageInput.value = '';
      });
    };

    _sendForm.onsubmit = (evt) => {
        sendMessage(_messageInput.value, userName);

      evt.preventDefault();
      return false;
    };

    const url = new URL('http://localhost:3000/.well-known/mercure');
    url.searchParams.append('topic', 'http://message.com/message');
    const eventSource = new EventSource(('http://localhost:3000/.well-known/mercure?topic=' + encodeURIComponent('http://message.com/message'))
    );
    eventSource.onmessage = (evt) => {
        const data = JSON.parse(evt.data);
        if (!data.message || !data.user) {
        return;
        }

        _receiver.insertAdjacentHTML('beforeend', `
        <div class="message">${data.user}: ${data.message}</div>`);
        };
        window.addEventListener('DOMContentLoaded', () => {
            sendMessage(userName + ' joined!');
        });
  </script>
{% block map %}{% endblock %}
{% block footer %}{% endblock %}
{% endblock %}
